<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.seven.code.mapper.GeneratorMapper">
	<select id="queryList" resultType="map">
		SELECT
			table_name tableName,
			engine,
			table_comment tableComment,
			create_time createTime
		FROM
			information_schema.tables
		WHERE
			<choose>
				<when test="databaseName != null and databaseName.trim() != ''">
					table_schema = #{databaseName}
				</when>
				<otherwise>
					table_schema = (SELECT database())
				</otherwise>
			</choose>
			<if test="tableName != null and tableName.trim() != ''">
				AND table_name LIKE concat('%', #{tableName}, '%')
			</if>
		ORDER BY
			create_time DESC
	</select>
	
	<select id="queryTotal" resultType="int">
		SELECT
			COUNT(*)
		FROM
			information_schema.tables
		WHERE
			<choose>
				<when test="databaseName != null and databaseName.trim() != ''">
					table_schema = #{databaseName}
				</when>
				<otherwise>
					table_schema = (SELECT database())
				</otherwise>
			</choose>
			<if test="tableName != null and tableName.trim() != ''">
				AND table_name LIKE concat('%', #{tableName}, '%')
			</if>
	</select> 
	
	<select id="queryTable" resultType="map">
		SELECT
			table_name tableName,
			engine,
			table_comment tableComment,
			create_time createTime
		FROM
			information_schema.tables
		WHERE
			<choose>
				<when test="databaseName != null and databaseName.trim() != '' and databaseName.trim() != 'undefined'">
					table_schema = #{databaseName}
				</when>
				<otherwise>
					table_schema = (SELECT database())
				</otherwise>
			</choose>
			AND table_name = #{tableName}
	</select> 
	
	<select id="queryColumns" resultType="map">
		SELECT
			column_name columnName,
			data_type dataType,
			column_comment columnComment,
			column_key columnKey,
			extra
		FROM
			information_schema.columns
 		WHERE
			<choose>
				<when test="databaseName != null and databaseName.trim() != '' and databaseName.trim() != 'undefined'">
					table_schema = #{databaseName}
				</when>
				<otherwise>
					table_schema = (SELECT database())
				</otherwise>
			</choose>
			AND table_name = #{tableName}
 		ORDER BY ordinal_position
	</select>
	<select id="queryDatabase" resultType="com.seven.code.entity.DatabaseEntity">
		SELECT
			table_schema AS databaseName
		FROM
			information_schema.`TABLES`
		WHERE
			table_schema NOT IN('information_schema','performance_schema','mysql')
		GROUP BY
			table_schema
	</select>
</mapper>
